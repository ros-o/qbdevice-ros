<launch>
  <!-- device info -->
  <arg name="device_id" doc="The ID of the device [1, 128]."/>
  <arg name="device_name" doc="The unique device name used in the yaml controller configurations."/>
  <arg name="device_type" doc="The type of the device [qbhand, qbmove, qbclaw, ...]."/>
  <!-- read/write settings -->
  <arg name="get_currents" default="true" doc="Choose whether or not to retrieve current measurements from the device."/>
  <arg name="get_positions" default="true" doc="Choose whether or not to retrieve position measurements from the device."/>
  <arg name="get_distinct_packages" default="false" doc="Choose whether or not to retrieve current and position measurements from the device in two distinct packages."/>
  <arg name="max_repeats" default="3" doc="The maximum number of consecutive repetitions to mark retrieved data as corrupted."/>
  <arg name="set_commands" default="true" doc="Choose whether or not to send command positions to the device."/>
  <arg name="set_commands_async" default="false" doc="Choose whether or not to send commands without waiting for ack."/>
  <!-- initialization settings -->
  <arg name="activate_on_initialization" default="false" doc="Choose whether or not to activate the motors on node startup."/>
  <arg name="rescan_on_initialization" default="false" doc="Choose whether or not to rescan the serial ports on node startup."/>
  <arg name="use_fake_measurement_mode" default="false" doc="Choose whether or not to use previous command values instead of device measurements."/>
  <!-- robot settings -->
  <arg name="robot_name" doc="The unique robot name."/>
  <arg name="robot_namespace" default="$(arg robot_name)" doc="The unique robot namespace."/>
  <arg name="use_gazebo" default="false" doc="Choose whether or not to use Gazebo instead of real devices."/>

  <group ns="$(arg robot_namespace)">
    <!-- bring up the controllers -->
    <group>  <!-- <group ns="control"> is done inside -->
      <include file="$(find qb_device_bringup)/launch/device_controllers_bringup.launch">
        <arg name="device_name" value="$(arg device_name)"/>
        <arg name="device_type" value="$(arg device_type)"/>
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
      </include>
    </group>

    <!-- load parameters -->
    <group ns="$(arg device_name)">
      <!-- device info -->
      <param name="device_id" type="int" value="$(arg device_id)"/>
      <param name="device_name" type="str" value="$(arg device_name)"/>
      <group unless="$(arg use_gazebo)">
        <param name="type" type="str" value="qb_claw_hardware_interface/qbClawHW" if="$(eval device_type == 'qbclaw')"/>
        <param name="type" type="str" value="qb_hand_hardware_interface/qbHandHW" if="$(eval device_type == 'qbhand')"/>
        <param name="type" type="str" value="qb_hand_hardware_interface/qbHand2MotorsHW" if="$(eval device_type == 'qbhand2m')"/>
        <param name="type" type="str" value="qb_move_hardware_interface/qbMoveHW" if="$(eval device_type == 'qbmove')"/>
      </group>
      <group if="$(arg use_gazebo)">
        <param name="type" type="str" value="qb_hand_gazebo_hardware_interface/qbHandHWSim" if="$(eval device_type == 'qbhand')"/>
        <param name="type" type="str" value="qb_hand_gazebo_hardware_interface/qbHandHWSim" if="$(eval device_type == 'qbhand2m')"/>
        <param name="type" type="str" value="qb_move_gazebo_hardware_interface/qbMoveHWSim" if="$(eval device_type == 'qbclaw')"/>
        <param name="type" type="str" value="qb_move_gazebo_hardware_interface/qbMoveHWSim" if="$(eval device_type == 'qbmove')"/>
      </group>
      <!-- read/write settings -->
      <param name="get_currents" type="bool" value="$(arg get_currents)"/>
      <param name="get_positions" type="bool" value="$(arg get_positions)"/>
      <param name="get_distinct_packages" type="bool" value="$(arg get_distinct_packages)"/>
      <param name="max_repeats" type="int" value="$(arg max_repeats)"/>
      <param name="set_commands" type="bool" value="$(arg set_commands)"/>
      <param name="set_commands_async" type="bool" value="$(arg set_commands_async)"/>
      <!-- initialization settings -->
      <param name="activate_on_initialization" type="bool" value="$(arg activate_on_initialization)"/>
      <param name="rescan_on_initialization" type="bool" value="$(arg rescan_on_initialization)"/>
      <param name="use_fake_measurement_mode" type="bool" value="$(arg use_fake_measurement_mode)"/>
      <param name="use_joint_limits" type="bool" value="$(arg use_joint_limits)"/>
    </group>
  </group>
</launch>
